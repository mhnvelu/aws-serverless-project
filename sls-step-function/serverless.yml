service: sls-step-function
frameworkVersion: "2"

plugins:
  - serverless-step-functions

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

functions:
  hello:
    handler: handler.hello
  add:
    handler: handler.add
  double:
    handler: handler.double
  doubleBigNumber:
    handler: handler.doubleBigNumber

stepFunctions:
  stateMachines:
    simple-maths:
      name: simple-maths
      definition:
        Comment: Simple Maths Example
        StartAt: add
        States:
          add:
            Type: Task
            Resource:
              Fn::GetAtt: [add, Arn]
            Next: isBigNumber
          isBigNumber:
            Type: Choice
            Choices:
              - Variable: $
                NumericGreaterThan: 50
                Next: doubleBigNumber
            Default: double
          double:
            Type: Task
            Resource:
              Fn::GetAtt: [double, Arn]
            End: true
            Retry:
              - ErrorEquals: [NumberIsTooBig]
                MaxAttempts: 0
              - ErrorEquals: [States.ALL]
                MaxAttempts: 3
            Catch:
              - ErrorEquals: [NumberIsTooBig]
                Next: doubleBigNumber
          doubleBigNumber:
            Type: Task
            Resource:
              Fn::GetAtt: [doubleBigNumber, Arn]
            End: true

    workflow-with-parallelism:
      name: workflow-parallel-state
      definition:
        Comment: WorkFlow with Parallel States
        StartAt: ParallelState
        States:
          ParallelState:
            Type: Parallel
            End: true
            Branches:
              - StartAt: Add
                States:
                  Add:
                    Type: Task
                    Resource:
                      Fn::GetAtt: [add, Arn]
                    Next: Double
                  Double:
                    Type: Task
                    Resource:
                      Fn::GetAtt: [double, Arn]
                    End: true
              - StartAt: PickX
                States:
                  PickX:
                    Type: Pass
                    InputPath: $.x
                    Next: DoubleValueOfX
                  DoubleValueOfX:
                    Type: Task
                    Resource:
                      Fn::GetAtt: [double, Arn]
                    End: true
              - StartAt: WaitFor5Seconds
                States:
                  WaitFor5Seconds:
                    Type: Wait
                    Seconds: 5
                    End: true
              - StartAt: NestedParallelState
                States:
                  NestedParallelState:
                    Type: Parallel
                    End: true
                    Branches:
                      - StartAt: PickY
                        States:
                          PickY:
                            Type: Pass
                            InputPath: $.y
                            Next: DoubleValueOfY
                          DoubleValueOfY:
                            Type: Task
                            Resource:
                              Fn::GetAtt: [double, Arn]
                            End: true
